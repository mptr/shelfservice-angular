user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   65;
  types_hash_max_size 2048;

  server_tokens off;

  # include resolvers
  include /etc/nginx/resolvers.conf;

  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  proxy_redirect          off;
  proxy_set_header        Host            $host;
  proxy_set_header        X-Real-IP       $remote_addr;
  proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

  gzip on;
  gzip_disable msie6;
  gzip_static on;
  gzip_comp_level 4;
  gzip_proxied any;
  gzip_types text/plain
  text/css
  application/x-javascript
  application/javascript
  text/xml
  application/xml
  application/xml+rss
  text/javascript
  application/x-font-ttf
  application/x-font-otf
  application/font-woff
  application/font-woff2
  application/vnd.ms-fontobject
  ;

  # log errors to stderr
  error_log stderr info;

  # disable logging if user-agent name starts with "kube-probe"
  map $http_user_agent $loggable {
    ~kube-probe 0;
    default 1;
  }

  server {
    listen 80 default_server;
    server_name  _;
    root /var/www;

    # ssl configuration for upstream https connections
    #proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    #proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
    #proxy_ssl_trusted_certificate /etc/nginx/ssl/trusted_ca.crt;

    # pipe access log in standard format to stdout if loggable
    access_log /dev/stdout combined if=$loggable;

    # security headers
    add_header "X-Frame-Options" "deny" "always";
    add_header "X-Content-Type-Options" "nosniff" "always";
    add_header "X-XSS-Protection" "1; mode=block" "always";

    # Content-Security-Policy
    # Keine Anzeige in Frames zulassen
    set $CSP "frame-ancestors 'none'";

    ############################################################################
    # DEFAULT LOCATIONS FOR STATIC CONTENT #####################################
    location ~* \.(js|json|css|png|jpg|jpeg|gif|svg|ico|ttf|woff|woff2)$ {
      # strict caching possible due to hash in filenames
      expires max;
      add_header "Cache-Control" "private, no-transform, must-revalidate";
      # prevent 200 status code when a resource is actually missing
      try_files $uri /$uri =404;
    }
    location / {
      # disable caching for index to enable cache busting
      expires epoch;
      # support angular ng-route virtual paths
      try_files $uri /$uri /index.html;
    }
    ############################################################################

  }
}

daemon off;
